openapi: 3.0.0
info:
  title: Analyzer Service API
  description: API for analyzing Kafka events
  version: "1.0.0"
  contact:
    email: mmulder10@bcit.ca

paths:
  /Part-Purchased:
    get:
      summary: Get event1 from the Kafka queue
      operationId: app.get_event1
      parameters:
        - name: index
          in: query
          description: Index of the event1 to retrieve
          required: true
          schema:
            type: integer
            example: 3
      responses:
        '200':
          description: Successfully retrieved event1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found

  /Part-Delivered:
    get:
      summary: Get event2 from the Kafka queue
      operationId: app.get_event2
      parameters:
        - name: index
          in: query
          description: Index of the event2 to retrieve
          required: true
          schema:
            type: integer
            example: 2
      responses:
        '200':
          description: Successfully retrieved event2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found

  /stats:
    get:
      summary: Get statistics of events in the Kafka queue
      operationId: app.get_stats
      responses:
        '200':
          description: Successfully retrieved event statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stats'

  /storage/stats:
    get:
      summary: Get event counts from Kafka
      operationId: app.get_event_counts
      responses:
        '200':
          description: Event type counts
          content:
            application/json:
              schema:
                type: object
                properties:
                  part_purchased:
                    type: integer
                    example: 100
                  part_delivery:
                    type: integer
                    example: 200

  /storage/events:
    get:
      summary: Get all events and trace IDs
      operationId: app.get_event_ids
      responses:
        '200':
          description: List of events and trace IDs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    event_id:
                      type: integer
                      example: 42
                    trace_id:
                      type: string
                      example: "550e8400-e29b-41d4-a716-446655440000"
                    type:
                      type: string
                      example: "part_purchased"

components:
  schemas:
    Event:
      type: object
      required:
        - index
        - event_type
        - payload
      properties:
        index:
          type: integer
          example: 3
        event_type:
          type: string
          example: "event1"
        payload:
          type: object
          example: {"key": "value"}

    Stats:
      type: object
      required:
        - num_event1
        - num_event2
      properties:
        num_event1:
          type: integer
          example: 100
        num_event2:
          type: integer
          example: 200
